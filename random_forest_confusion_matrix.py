# -*- coding: utf-8 -*-
"""Random_Forest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i9ed4zG2sHosWXgQK76M3oiEeirfK41H
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Sample data as a 2D array
confusion_matrix_rf_data= [[3.988e+03, 8.400e+01, 4.000e+00, 3.500e+01, 7.900e+01, 1.300e+01, 2.790e+02,
  1.000e+00],
 [3.690e+02, 1.323e+03, 9.790e+02, 5.380e+02, 4.800e+02, 3.130e+02, 3.110e+02,
  3.090e+02],
 [5.400e+01, 4.820e+02, 2.200e+03, 1.610e+02, 1.390e+02, 1.180e+02, 7.000e+01,
  1.225e+03],
 [1.900e+02, 8.600e+01, 4.100e+01, 2.406e+03, 2.360e+02, 1.361e+03, 1.670e+02,
  8.000e+00],
 [1.100e+01, 0.000e+00, 0.000e+00, 0.000e+00, 2.181e+03, 2.048e+03, 2.390e+02,
  0.000e+00],
 [1.000e+01, 0.000e+00, 0.000e+00, 0.000e+00 ,8.540e+02, 3.398e+03, 2.400e+02,
  0.000e+00],
 [7.970e+02, 1.500e+01, 5.000e+01, 3.400e+01, 1.322e+03, 6.940e+02, 1.626e+03,
  0.000e+00],
 [2.700e+01, 5.100e+01, 7.600e+01, 4.700e+01, 3.900e+01, 5.900e+01, 9.000e+00,
  4.277e+03]]



# Convert to DataFrame
confusion_matrix_rf_cv = pd.DataFrame(confusion_matrix_rf_data)

# Set index and column names
confusion_matrix_rf_cv.index.name = 'Actual'
confusion_matrix_rf_cv.columns.name = 'Predicted'
confusion_matrix_rf_cv = pd.DataFrame(confusion_matrix_rf_data, index=["1", "2", "3", "4", "5" , "6", "7", "8"], columns=["1", "2", "3", "4", "5" , "6", "7", "8"])

# Plot heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(confusion_matrix_rf_cv, annot=True, fmt=".0f", cmap="YlGnBu")
plt.xlabel("Predicted")
plt.ylabel("True Label")
plt.title(" Random Forest Cross Validation Confusion Matrix")
plt.show()

# Sample data as a 2D array
confusion_matrix_rf_data= [[3.988e+03, 8.400e+01, 4.000e+00 ,3.500e+01, 7.900e+01, 1.300e+01 ,2.790e+02,
  1.000e+00],
 [3.690e+02, 1.323e+03, 9.790e+02, 5.380e+02, 4.800e+02, 3.130e+02, 3.110e+02,
  3.090e+02],
 [5.400e+01, 4.820e+02, 2.200e+03, 1.610e+02, 1.390e+02, 1.180e+02, 7.000e+01,
  1.225e+03],
 [1.900e+02, 8.600e+01, 4.100e+01, 2.406e+03, 2.360e+02, 1.361e+03, 1.670e+02,
  8.000e+00],
 [1.100e+01, 0.000e+00, 0.000e+00 ,0.000e+00, 2.181e+03, 2.048e+03, 2.390e+02,
  0.000e+00],
 [1.000e+01, 0.000e+00, 0.000e+00, 0.000e+00, 8.540e+02, 3.398e+03 ,2.400e+02,
  0.000e+00],
 [7.970e+02, 1.500e+01, 5.000e+01, 3.400e+01, 1.322e+03, 6.940e+02, 1.626e+03,
  0.000e+00],
 [2.700e+01 ,5.100e+01, 7.600e+01, 4.700e+01, 3.900e+01 ,5.900e+01, 9.000e+00,
  4.277e+03]]



# Convert to DataFrame
confusion_matrix_rf_tv = pd.DataFrame(confusion_matrix_rf_data)

# Set index and column names
confusion_matrix_rf_tv.index.name = 'Actual'
confusion_matrix_rf_tv.columns.name = 'Predicted'
confusion_matrix_rf_tv = pd.DataFrame(confusion_matrix_rf_data, index=["1", "2", "3", "4", "5" , "6", "7", "8"], columns=["1", "2", "3", "4", "5" , "6", "7", "8"])

# Plot heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(confusion_matrix_rf_tv, annot=True, fmt=".0f", cmap="YlGnBu")
plt.xlabel("Predicted")
plt.ylabel("True Label")
plt.title(" Random Forest TrainValidation Confusion Matrix")
plt.show()